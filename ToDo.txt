(*) подключение в заданный голосовой канал и воспроизведение URL-ов из массива по порядку
(*) показ названия и длительности текущего трека
(*) показ и обновление текущего тайминга
(*) показ ссылки текущего трека
(*) кнопка "следующий трек"
(*) запоминание списка воспроизведения
(*) кнопка "предыдуший трек"
(*) сохранение позиции проигрывания при переходе вперёд-назад
(*) сбор и отправка в личку списка треков
(*) отправка в личку списка треков по 5 шт. с кнопками проигрывания соотв. треков
(*) использовать старое сообщение бота, если оно не очень далеко
(*) пауза если никого нет, и запуск когда кто-то первый зашёл
(*) не отправлять обновление сообщения если оно не менялось (на случай паузы)
( ) играть музыку из папки вместо ютуба, мб использовать имена папок как некие категории
( ) тред обработки событий + очередь событий на обработку в этом треде
( ) проверять что управляющие команды от того кто в голосовом канале
( ) "закладки" - отправлять в личку сообщение с треком, позицией, ссылкой на ютуб с таймингом и реакцией, включить на радио этот трек с этого места
( ) использовать файловый кеш описаний для треков, что бы быстрее стартовать
( ) кнопочку приглашения в кнал - что бы бот прешёл в канал к нажавшему
( ) хранить список ссылок для воспроизведения во внешнем файле
( ) команда add <url> в личку боту - добавляет ссылку в список воспроизведения
( ) при старте перемешивать список так, что бы играть его полностью, случайно, но без повторов
( ) ограничить список влево-вправо количеством треков в списке. При переходе за крайний преходить в противоположный конец
( ) сохранять порядок и тайминги воспроизведения между перезапусками

тут смотреть емоджи
http://www.iemoji.com/view/emoji/305/symbols/keycap-9

тут пример работы с yandex.music
https://github.com/JuniperBot/JuniperBot/blob/e3a92b66eb22d1036c57d0adcd5988f03f092ce1/modules/jb-module-audio/src/main/java/ru/juniperbot/module/audio/service/handling/YandexSearchProvider.java